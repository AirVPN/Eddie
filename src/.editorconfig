# <eddie_source_header>
# This file is part of Eddie/AirVPN software.
# Copyright (C)2014-2023 AirVPN (support@airvpn.org) / https://airvpn.org
#
# Eddie is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Eddie is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Eddie. If not, see <http://www.gnu.org/licenses/>.
# </eddie_source_header>

# Eddie Rules

# Keep CRLF even in linux/macos files, otherwise raise IDE0055 warning

# There are '#pragma warning' specific for CA5379 in code, TOFIX

# There are '#pragma warning' in files directly also in legacy code that need deprecation. Currently:
# - When related to specific scope, generally linux/Mono.
# - CA1416 for Windows-only code (net8 dev), that need deprecation
# - CA1816 UnmanagedPointer.Dispose(bool) calls GC.SuppressFinalize(object) in AuthenticodeTools.cs

# Lib.Forms, Lib.Forms.Skin, App.Forms.Linux, App.Cocoa.MacOS are ignored, because need deprecation

# Otherwise, we consider ALL as warning and manage exceptions here (with reasons as comment)

# Code files
[*.{cs,vb}]

# Default severity for analyzer diagnostics - Requires **VS2019 16.5** or later
dotnet_analyzer_diagnostic.severity = warning
dotnet_analyzer_diagnostic.category-Style.severity = warning
dotnet_analyzer_diagnostic.category-CodeQuality.severity = warning

# Use VS Analyze > Run Code Analysis on a .sln (or App.Checking/All.CS.net8.sln) to evaluate IDE*.

# Eddie - New in migration from Net7 to Net8, pending work, understand if fixes are compatible with net4
dotnet_diagnostic.CA1865.severity = none # Use 'string.StartsWith(char)' instead of 'string.StartsWith(string)'
dotnet_diagnostic.CA1861.severity = none # Prefer 'static readonly' fields over constant array arguments if the called method is called repeatedly and is not mutating the passed array
dotnet_diagnostic.CA1862.severity = none # Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'
dotnet_diagnostic.CA2249.severity = none # Use 'string.Contains' instead of 'string.IndexOf' to improve readability

# Eddie - Right, TODO, WIP

dotnet_diagnostic.CA2020.severity = none # Starting with .NET 7 the explicit conversion '(IntPtr)Int64' will not throw when overflowing in an unchecked context.
dotnet_diagnostic.CA1838.severity = none # Avoid 'StringBuilder' parameters for P/Invokes. Consider using a character buffer instead.
dotnet_diagnostic.CA2101.severity = none # Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA1401.severity = none # P/Invoke method 'x' should not be visible 
dotnet_diagnostic.CA1001.severity = none # Type 'Platform' owns disposable field(s) 'm_mutexSingleInstance' but is not disposable 

# Eddie - Right, TODO, WIP, Style

dotnet_diagnostic.IDE0001.severity = none # Simplify name
dotnet_diagnostic.IDE0002.severity = none # Name can be simplified
dotnet_diagnostic.IDE0003.severity = none # Name can be simplified.
dotnet_diagnostic.IDE0004.severity = none # Cast is redundant
dotnet_diagnostic.IDE0008.severity = none # Use explicit type instead of 'var'
dotnet_diagnostic.IDE0011.severity = none # Add braces # More than 1500 point, style only
dotnet_diagnostic.IDE0034.severity = none # 'default' expression can be simplified
dotnet_diagnostic.IDE0040.severity = none # Accessibility modifiers required
dotnet_diagnostic.IDE0044.severity = none # Add readonly modifier
dotnet_diagnostic.IDE0045.severity = none # 'if' statement can be simplified
dotnet_diagnostic.IDE0054.severity = none # Use compound assignment
dotnet_diagnostic.IDE0055.severity = none # Fix formatting
dotnet_diagnostic.IDE0057.severity = none # Substring can be simplified
dotnet_diagnostic.IDE0059.severity = none # Unnecessary assignment of a value to 'x' # Generally, unnecessary var initialization
dotnet_diagnostic.IDE0060.severity = none # Remove unused parameter 'x' if it is not part of a shipped public API
dotnet_diagnostic.IDE0066.severity = none # Use 'switch' expression
dotnet_diagnostic.IDE0074.severity = none # Use compound assignment
dotnet_diagnostic.IDE0078.severity = none # Use pattern matching
dotnet_diagnostic.IDE0090.severity = none # 'new' expression can be simplified
dotnet_diagnostic.IDE0100.severity = none # Remove redundant equality
dotnet_diagnostic.IDE0220.severity = none # 'x' statement implicitly converts 'x' to 'x'. Add an explicit cast to make intent clearer, as it may fail at runtime
dotnet_diagnostic.IDE0251.severity = none # ? no description
dotnet_diagnostic.IDE0270.severity = none # Null check can be simplified

dotnet_diagnostic.CA1853.severity = none # Do not guard 'Dictionary.Remove(key)' with 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1854.severity = none  # Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup
dotnet_diagnostic.CA1822.severity = none # Member 'x' does not access instance data and can be marked as static
dotnet_diagnostic.CA2201.severity = none # Exception type System.Exception is not sufficiently specific
dotnet_diagnostic.CA1051.severity = none # Do not declare visible instance fields
dotnet_diagnostic.CA1711.severity = none # Either replace the suffix 'Ex' in member name MaximumEx with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the member it replaces
dotnet_diagnostic.CA1720.severity = none # Identifier 'Guid' contains type name 
dotnet_diagnostic.CA1507.severity = none # Use nameof in place of string literal

# Eddie - net8, fix not compatible with net4, avoid conditional pragma net4 vs net8 for this for now.

dotnet_diagnostic.CA1845.severity = none # CA1845: Use span-based 'string.Concat' and 'AsSpan' instead of 'Substring'
dotnet_diagnostic.SYSLIB1054.severity = none # NativeMethods.cs(105,31): warning SYSLIB1054: Mark the method 'x' with 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time
dotnet_diagnostic.SYSLIB1045.severity = none # Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.

# Eddie - WinForms (planned deprecation)
dotnet_diagnostic.CA1304.severity = none # The behavior of 'ResourceManager.GetObject(string)' could vary based on the current user's locale settings
dotnet_diagnostic.CA1305.severity = none # The behavior of 'int.ToString()' could vary based on the current user's locale settings.
dotnet_diagnostic.CA1309.severity = none # Use ordinal string comparison
dotnet_diagnostic.CA1806.severity = none # SetWmClass calls XSetClassHint but does not use the HRESULT or error code that the method returns
dotnet_diagnostic.CA2208.severity = none # Method SetNotifyIconText passes 'Text limited to 127 characters' as the paramName argument to a ArgumentOutOfRangeException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.
dotnet_diagnostic.CA2211.severity = none # Non-constant fields should not be visible
dotnet_diagnostic.IDE1006.severity = none # Naming rule violation # WinForms code, will be deprecated
dotnet_diagnostic.IDE0130.severity = none # Namespace "Eddie.Forms.Windows" does not match folder structure, expected "Eddie.App.UI.Windows"

# Eddie - Right, but ignored

dotnet_diagnostic.CA1825.severity = none # Avoid unnecessary zero-length array allocations.
dotnet_diagnostic.CA1805.severity = none # Member 'x' is explicitly initialized to its default value

# Eddie - Not accepted: We prefer to avoid complex syntax, or we need to check if cause issues under Mono or Xamarin compiler or delay until net4 support is dropped

dotnet_diagnostic.IDE0017.severity = none # Object initialization can be simplified
dotnet_diagnostic.IDE0018.severity = none # Inline variable declaration
dotnet_diagnostic.IDE0019.severity = none # Use pattern matching
dotnet_diagnostic.IDE0020.severity = none # Use pattern matching
dotnet_diagnostic.IDE0025.severity = none # Use expression body for properties
dotnet_diagnostic.IDE0026.severity = none # Use expression body for indexers
dotnet_diagnostic.IDE0027.severity = none # Use expression body for accessors
dotnet_diagnostic.IDE0028.severity = none # Collection initialization can be simplified
dotnet_diagnostic.IDE0031.severity = none # Null check can be simplified
dotnet_diagnostic.IDE0038.severity = none # Use pattern matching
dotnet_diagnostic.IDE0046.severity = none # 'if' statement can be simplified
dotnet_diagnostic.IDE0058.severity = none # Remove unnecessary expression value # Want a special syntax for unused return
dotnet_diagnostic.IDE1005.severity = none # Delegate invocation can be simplified

# Eddie - Not accepted, we don't like the suggestion

dotnet_diagnostic.CA1707.severity = none # Remove the underscores from member name Eddie.Platform.Windows.NativeMethods.AF_INET 
dotnet_diagnostic.IDE0032.severity = none # Use auto property
dotnet_diagnostic.IDE0047.severity = none # Parentheses can be removed
dotnet_diagnostic.IDE0048.severity = none # Parentheses should be added for clarity
dotnet_diagnostic.IDE0049.severity = none # Name can be simplified # Suggest for example to adapt 'Int64' to 'long', still think 'Int64' is more clear.
dotnet_diagnostic.IDE0063.severity = none # 'using' statement can be simplified
dotnet_diagnostic.IDE0210.severity = none # Convert to top-level statements
dotnet_diagnostic.IDE0230.severity = none # Use UTF-8 string literal

# Eddie - False positive

dotnet_diagnostic.JSON002.severity = none # Probable JSON string detected
dotnet_diagnostic.IDE0079.severity = none # Remove unnecessary suppression # Detect CA1416 as unnecessary, but if compiled on net8 are necessary

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
indent_style = tab
tab_width = 4
indent_size = 4
end_of_line = crlf

[*.cs]
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_indent_labels = one_less_than_current


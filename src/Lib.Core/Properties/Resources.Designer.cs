//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eddie.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Eddie.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;provider code=&quot;AirVPN&quot; title=&quot;AirVPN&quot; subtitle=&quot;The air to breathe the real Internet.&quot; href=&quot;https://airvpn.org&quot; class=&quot;service&quot; fetch_mode=&quot;rsa4096+aes256&quot;&gt;
        ///  &lt;manifest&gt;
        ///    &lt;urls&gt;
        ///      &lt;url address=&quot;http://63.33.78.166&quot; /&gt;
        ///      &lt;url address=&quot;http://52.48.66.85&quot; /&gt;
        ///      &lt;url address=&quot;http://54.93.175.114&quot; /&gt;
        ///      &lt;url address=&quot;http://63.33.116.50&quot; /&gt;
        ///    &lt;/urls&gt;
        ///    &lt;rsa&gt;
        ///      &lt;RSAParameters&gt;
        ///        &lt;Exponent&gt;AQAB&lt;/Exponent&gt;
        ///        &lt;Modulus&gt;wuQXz7e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AirVPN {
            get {
                return ResourceManager.GetString("AirVPN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;links&quot;: {
        ///		&quot;github&quot;: &quot;https://github.com/AirVPN/Eddie&quot;,
        ///		&quot;license&quot;: &quot;http://www.gnu.org/licenses/gpl.html&quot;,
        ///		&quot;help&quot;: {
        ///			&quot;website&quot;: &quot;https://eddie.website/&quot;,
        ///			&quot;general&quot;: &quot;https://eddie.website/docs/&quot;,
        ///			&quot;netlock&quot;: &quot;https://eddie.website/docs/netlock/&quot;,
        ///			&quot;advanced&quot;: &quot;https://eddie.website/docs/advanced/&quot;,
        ///			&quot;directives&quot;: &quot;https://eddie.website/docs/directives/&quot;,
        ///			&quot;protocols&quot;: &quot;https://eddie.website/docs/protocols/&quot;,
        ///			&quot;udp_vs_tcp&quot;: &quot;https://eddie.website/docs/udp_vs_tcp/&quot;,
        ///			&quot;to [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string data {
            get {
                return ResourceManager.GetString("data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to               GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///to take  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;provider code=&quot;OpenVPN&quot; title=&quot;Generic OpenVPN provider&quot; subtitle=&quot;If you have a folder with .ovpn files&quot; href=&quot;https://openvpn.net&quot; class=&quot;openvpn&quot;&gt;
        ///&lt;/provider&gt;.
        /// </summary>
        internal static string OpenVPN {
            get {
                return ResourceManager.GetString("OpenVPN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ------------------------------------------------------------
        ///OpenVPN -- A Secure tunneling daemon
        ///
        ///Copyright (C) 2002-2018 OpenVPN Technologies, Inc. 
        ///This program is free software;
        ///
        ///you can redistribute it and/or modify
        ///it under the terms of the GNU General Public License version 2
        ///as published by the Free Software Foundation.
        ///
        ///For the latest version of OpenVPN, 
        ///go to:
        ///
        ///	http://openvpn.net/
        ///
        ///License: GNU General Public License (GPL v2+)
        ///----------------------------------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ThirdParty {
            get {
                return ResourceManager.GetString("ThirdParty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PLEASE READ CAREFULLY THE TERMS AND CONDITIONS OF THIS AGREEMENT. BY USING THE SERVICE YOU ACKNOWLEDGE THAT YOU ARE ACCEPTING A BENEFIT BY USING THE SERVICE, AND THAT YOU HAVE READ, UNDERSTOOD, AND AGREE TO BE BOUND BY ALL OF THE TERMS AND CONDITIONS OF THIS AGREEMENT. IF YOU DO NOT AGREE TO ALL OF THE TERMS AND CONDITIONS OF THIS AGREEMENT, YOU ARE NOT ALLOWED TO USE THE SERVICE.
        ///
        ///
        ///DESCRIPTION OF SERVICE
        ///
        ///a) AirVPN is operated by Air. Please refer to Privacy Notice for contact details.
        ///
        ///b) AirVPN is [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TOS {
            get {
                return ResourceManager.GetString("TOS", resourceCulture);
            }
        }
    }
}
